/*****************************************************************************
 *   A demo example using several of the peripherals on the base board
 *
 *   Copyright(C) 2011, EE2024
 *   All rights reserved.
 *
 ******************************************************************************/

#include <string.h>
#include <stdio.h>
#include "lpc17xx_pinsel.h"
#include "lpc17xx_gpio.h"
#include "lpc17xx_i2c.h"
#include "lpc17xx_ssp.h"
#include "lpc17xx_timer.h"
#include "lpc17xx_uart.h"

uint8_t rev_buf[4];                               // Reception buffer
uint32_t rev_cnt = 0;                               // Reception counter
uint8_t teraterm[4];
uint8_t intMsg[4] = {'R', 'P', 'T', '\0'};

uint32_t isReceived = 0;                            // Init to be not received

void UART_IntReceive(void)
{
    /* Read the received data */
    if(UART_Receive(LPC_UART3, &rev_buf[rev_cnt], 1, NONE_BLOCKING) == 1) {
        if(rev_buf[rev_cnt] == '\r'){
        	rev_buf[rev_cnt] = 'X';
        	rev_buf[3] = '\0';
            isReceived = 1;
            strcpy(teraterm, rev_buf);
        }
        if (rev_buf[rev_cnt] == '\n') {
        	printf("new line detected\n");
        	rev_cnt = -1;
        }
        rev_cnt++;
        if(rev_cnt == 4) rev_cnt = 0;
    }
}

void UART3_IRQHandler(void)
{
	UART3_StdIntHandler();
}

void pinsel_uart3(void){
    PINSEL_CFG_Type PinCfg;
    PinCfg.Funcnum = 2;
    PinCfg.Pinnum = 0;
    PinCfg.Portnum = 0;
    PINSEL_ConfigPin(&PinCfg);
    PinCfg.Pinnum = 1;
    PINSEL_ConfigPin(&PinCfg);
}

void init_uart(void){
    UART_CFG_Type uartCfg;
    uartCfg.Baud_rate = 115200;
    uartCfg.Databits = UART_DATABIT_8;
    uartCfg.Parity = UART_PARITY_NONE;
    uartCfg.Stopbits = UART_STOPBIT_1;
    //pin select for uart3;
    pinsel_uart3();
    //supply power & setup working parameters for uart3
    UART_Init(LPC_UART3, &uartCfg);
    //enable transmit for uart3
    UART_TxCmd(LPC_UART3, ENABLE);
}

void setUartInt(void) {
    // UART FIFO config
    UART_FIFO_CFG_Type UARTFIFOConfigStruct;

    UART_FIFOConfigStructInit(&UARTFIFOConfigStruct);
    // Init FIFO for UART3
    UART_FIFOConfig(LPC_UART3, &UARTFIFOConfigStruct);
    //------------------------------------------------
    UART_SetupCbs(LPC_UART3, 0, (void *)UART_IntReceive);
    /* Enable UART Rx interrupt */
    UART_IntConfig(LPC_UART3, UART_INTCFG_RBR, ENABLE);

    /* Enable Interrupt for UART3 */
    NVIC_EnableIRQ(UART3_IRQn);
}

static char* msg = NULL;
int main (void){

    init_uart();
    setUartInt();
    //test sending message
    msg = "Welcome to EE2024 \r\n";
    UART_Send(LPC_UART3, (uint8_t *)msg , strlen(msg), BLOCKING);
    while (1){
    	if (isReceived == 1) {
    		isReceived = 0;
    		printf("%s\n", teraterm);
    		if(strcmp(teraterm, intMsg) == 0){
    			printf("set flag\n");
    		}
    		printf("%d\n", rev_cnt);
    	}
    }
    return 0;
}

void check_failed(uint8_t *file, uint32_t line)
{
	/* User can add his own implementation to report the file name and line number,
	 ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
	/* Infinite loop */
	while(1);
}

